name: PRFlow Cart API

on:
  pull_request:
    branches:
      - main
    paths:
      - Source/Services/Tailwind.Traders.Cart.Api/**

env:
  # azure
  resourceGroup: tailwindtraders
  nameSpace: twt

  # helmchart
  tailwindChartValuesScript: Deploy/powershell/Generate-Config.ps1
  tailwindChartValues: values.yaml
  tailwindCharts: Deploy/helm

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout branch"
        uses: actions/checkout@v2

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Create Helm gvalues file"
        run: |
          pwsh $tailwindChartValuesScript -resourceGroup $resourceGroup -outputFile $GITHUB_WORKSPACE/$tailwindChartValues

      - name: "Set PR Environment"
        run: |
          # set for this step
          AKS_CLUSTER=$(az aks list --resource-group $resourceGroup --query [0].name -o tsv)
          # persist env vars
          echo "AKS_CLUSTER=$(az aks list --resource-group $resourceGroup --query [0].name -o tsv)" >> $GITHUB_ENV
          echo "INGRESS=$(az aks show -n $AKS_CLUSTER -g $resourceGroup --query addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName -o tsv)" >> $GITHUB_ENV
          echo "Retrieving Container Registry info..."
          acrName=$(az acr list -g $resourceGroup -o tsv --query [0].name)
          CONTAINER_REGISTRY=$(az acr list -g $resourceGroup -o tsv --query [0].loginServer)
          # acr/container registry variables
          echo "CONTAINER_REGISTRY=$(az acr list -g $resourceGroup -o tsv --query [0].loginServer)" >> $GITHUB_ENV
          echo "REGISTRY_USERNAME=$(az acr credential show -n $acrName --query username -o tsv)" >> $GITHUB_ENV
          echo "REGISTRY_PASSWORD=$(az acr credential show -n $acrName -o tsv --query passwords[0].value)" >> $GITHUB_ENV

      # docker login
      - name: docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: docker build
        run: |
          docker build Source/Services/Tailwind.Traders.Cart.Api/ -t $CONTAINER_REGISTRY/cart.api:$GITHUB_SHA

      - name: Scan Image for Vulnerabilities
        uses: azure/container-scan@v0
        id: container-scan
        with:
          image-name: ${{ env.CONTAINER_REGISTRY }}/cart.api:${{ github.sha }} # loginServerlUrl/ would be empty if it's hosted on dockerhub; ${{ github.sha }} could also be replaced with any desired image tag
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      
      - name: docker push
        run: |
          docker push $CONTAINER_REGISTRY/cart.api:$GITHUB_SHA
      
      - name: Publish container scan results to Azure Security Center
        uses: azure/publish-security-assessments@v0
        with:
          artifact-type: containerImage
          subscription-token: ${{ secrets.AZ_SUBSCRIPTION_TOKEN }}
          instrumentation-key: ${{ secrets.INSTRUMENTATION_KEY }}
          scan-results-path: ${{ steps.container-scan.outputs.scan-report-path }}

      - name: Login to AKS
        uses: azure/aks-set-context@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          cluster-name: ${{ env.AKS_CLUSTER }}
          resource-group: ${{ env.resourceGroup }}

      - name: Create valid namespace name
        id: generate-valid-namespace-name
        run: |
          branch=${GITHUB_HEAD_REF::63}        
          branch=$(echo ${branch//[!0-9a-zA-Z]/-} | tr '[:upper:]' '[:lower:]' | sed -e 's/^-/z/' -e 's/-$/z/')
          echo ::set-output name=result::$branch

      - name: Helm Install PR
        run: |
          helm upgrade --install --namespace  ${{ env.nameSpace }} ${{steps.generate-valid-namespace-name.outputs.result}} \
          -f $GITHUB_WORKSPACE/$tailwindChartValues \
          --set ingress.hosts={$INGRESS} \
          --set image.repository=$CONTAINER_REGISTRY/cart.api \
          --set image.tag=$GITHUB_SHA $tailwindCharts/cart-api \
          --set B2C.clientID=none \
          --set B2C.identityMetadata=none \
          --set B2C.issuer=none \
          --set B2C.policyName=none \
          --set B2C.tenantID=none

      - name: Add routing labels
        run: |
          kubectl label pods --selector="app=tailwindtraders-cart,release=${{steps.generate-valid-namespace-name.outputs.result}}" routing.visualstudio.io/route-from=cart -n ${{ env.nameSpace }} --overwrite=true
          kubectl annotate pods --selector="app=tailwindtraders-cart,release=${{steps.generate-valid-namespace-name.outputs.result}}" routing.visualstudio.io/route-on-header=kubernetes-route-as=${{steps.generate-valid-namespace-name.outputs.result}} -n ${{ env.nameSpace }} --overwrite=true
          
      - uses: jldeen/dev-spaces/actions/add-review-url@Releases/v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          host: "${{ env.INGRESS }}"
          branch-name: ${{steps.generate-valid-namespace-name.outputs.result}}
          protocol: "http"